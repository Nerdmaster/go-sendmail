# Rules are matched in order, so if two rules would catch something, the first one that matches will "win"
rules:
  # Any number of matchers can be specified, but for a rule to trigger, all
  # matchers must match the message
  - matchers:
      # Match an exact field's value
      - "From:me@example.com"
    # Auth, if set, is used to authenticate against the SMTP server.  Host is
    # usually, but not always, the same as the SMTP server's host, so they have
    # to be separated here.
    auth:
      host: "example.com"
      username: me@example.com
      password: mysmtppassword
      server: "example.com:25"

  - matchers:
      # Add "/regex" to a fieldname to match as a regex
      - "From/regex:^.*@example.com$"
    auth:
      host: "example.com"
      username: noreply@example.com
      password: mysmtppassword
      server: "example.com:25"

  - matchers:
      # This matches an exact "to" email - handy for things like contact forms
      # in PHP, where they tend to fake the "from" address.  Note that when
      # matching "To", "From", "CC", or "BCC", the address is matched on (e.g.,
      # only "blah@example.com" is considered in "To: Somebody <blah@example.com>"),
      # and only the first address in the list is considered in order to avoid
      # testing hundreds of addresses one by one.
      - "To=mymail@example.com"
    auth:
      host: "example.com"
      username: noreply@example.com
      password: mysmtppassword
      server: "example.com:25"

  # Catch-all should come last - the match rule is simply "*"
  - matchers:
      - "*"
    auth:
      host: "example.com"
      username: default@example.com
      password: defaultpass
      server: "example.com:25"
